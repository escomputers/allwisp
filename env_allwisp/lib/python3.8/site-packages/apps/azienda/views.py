from django.http import JsonResponse,HttpResponse, HttpResponseRedirect
from django.shortcuts import get_object_or_404, render, redirect
from django.urls import reverse
from django.contrib.auth.decorators import login_required
import datetime
from django.core.files.storage import FileSystemStorage
import json, os
from django.contrib.auth.decorators import login_required, user_passes_test
from django.forms.models import model_to_dict
from ..forms import clientiForm, statoclienteForm,offertainternetForm, cadenzapagamentoform, metodopagamento, offertavoipForm, aziendaForm
from .models import Azienda
from apps.attachment.models import InvoiceAttachment,ExpenseAttachment
from  apps.expenses.models import Expense
from apps.items.models import InvoiceItem,InvoiceItem, offertainternet, cadenzapagamento, metodopagamento
from apps.invoices.models import Invoice
from django.views.generic.edit import UpdateView


#new customer
@login_required(login_url='login/')
def nuovazienda(request):
	azienda=aziendaForm(request.POST)
	if azienda.is_valid():
		azienda.save()
		return render(request, 'nuovaazienda.html', context={'azienda': aziendaForm()})
	return render(request, 'nuovaazienda.html',context={'azienda': azienda})


# Create your views here.
# List all customers
@login_required(login_url='login/')
def azienda_list(request):
	aziendaa = Azienda.objects.all()
	context = {
		'title' : 'Lista delle aziende del gruppo',
		'azienda' : aziendaa,
	}
	return render(request, 'aziendalist.html', context)



# Update customer

def update_azienda(request, ragionesociale):
		aziend = Azienda.objects.get(pk=ragionesociale)
		if request.method == "POST":
			aziendacliente=aziendaForm(request.POST, instance=aziend)
			if aziendacliente.is_valid():
				aziend = aziendacliente.save(commit=False)
				aziend.save()
				return render( request, 'aziendadettagli.html', context={'aziendacliente': aziendacliente})
				#return HttpResponseRedirect(reverse('update', args=(custom.ragionesociale,)))
		else:
			aziendacliente=clientiForm( instance=aziend )		
		return render( request, 'aziendadettagli.html', context={'aziendacliente': aziendacliente})
            


# Delete customer
@login_required(login_url='login/')
def delete_azienda(request, ragionesociale):
	customer = get_object_or_404(Azienda, pk=ragionesociale)
	customer.delete()
	return HttpResponseRedirect(reverse('customer_list'))