from django.http import JsonResponse,HttpResponse, HttpResponseRedirect
from django.shortcuts import get_object_or_404, render, redirect
from django.urls import reverse
from django.contrib.auth.decorators import login_required
import datetime
from django.core.files.storage import FileSystemStorage
import json, os
from django.contrib.auth.decorators import login_required, user_passes_test
from django.forms.models import model_to_dict
from forms import clientiForm ,offertainternetForm, cadenzapagamentoform, metodopagamento, offertavoipForm, aziendaForm
from .models import Azienda
from apps.expenses.models import Expense
from apps.items.models import DocumentItem,DocumentItem, offertainternet, cadenzapagamento, metodopagamento
from apps.documents.models import Document
from django.views.generic.edit import UpdateView


@login_required
def aggiungi_azienda(request):
	azienda=aziendaForm(request.POST)
	if azienda.is_valid():
		azienda.save()
		return render(request, 'company_new.html', context={'azienda': aziendaForm()})
	return render(request, 'company_new.html',context={'azienda': azienda})


@login_required
def lista_aziende(request):
	azienda = Azienda.objects.all()
	context = {
		'title' : 'Lista aziende',
		'azienda' : azienda,
	}
	return render(request, 'companies_list.html', context)


@login_required
def aggiorna_azienda(request, ragionesociale):
		azienda = Azienda.objects.get(pk=ragionesociale)
		if request.method == "POST":
			aziendacliente=aziendaForm(request.POST, instance=azienda)
			if aziendacliente.is_valid():
				azienda = aziendacliente.save(commit=False)
				azienda.save()
				return render( request, 'company_detail.html', context={'aziendacliente': aziendacliente})
				#return HttpResponseRedirect(reverse('update', args=(custom.ragionesociale,)))
		else:
			aziendacliente=clientiForm( instance=azienda )		
		return render( request, 'company_detail.html', context={'aziendacliente': aziendacliente})
            


@login_required
def delete_azienda(request, ragionesociale):
	customer = get_object_or_404(Azienda, pk=ragionesociale)
	customer.delete()
	return HttpResponseRedirect(reverse('companies_list'))

