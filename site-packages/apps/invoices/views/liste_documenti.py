from django.http import HttpResponse, HttpResponseRedirect, JsonResponse
from django.shortcuts import get_object_or_404, render,redirect
from django.urls import reverse
from django.core.files.storage import FileSystemStorage
from django.contrib.auth.decorators import login_required
import datetime
from django.contrib import messages
from django.forms import formset_factory,modelformset_factory
from apps.customer.models import Customer
from apps.expenses.models import Expense
from apps.items.models import InvoiceItem
from dateutil.relativedelta import *
from django.db.models import Sum
from django.db.models import Q #per fare le condiazioni logiche and, or,xor ecc...
from ..models import Invoice,  Preventivo, Nota_di_credito,prodotti
from forms import offertainternetForm,visualizza_prodotti,cadenzapagamentoform, metodopagamento, offertavoipForm,prodotti_preventivoForm,nota_di_creditoForm,prodottiFormset
from django.forms import inlineformset_factory


@login_required
def lista_preventivi(request):
	lista=Preventivo.objects.all().order_by('-id')
	context={'lista':lista}
	return render(request, 'lista_preventivo.html', context)


@login_required
def lista_nota_credito(request):
	lista=Nota_di_credito.objects.all().order_by('-id')
	context={'lista':lista}
	return render(request, 'lista_nota_di_credito.html', context) 

@login_required
def lista_fatture(request):
	lista=Invoice.objects.exclude(customer=2).order_by('-date')#da modificare in base al customer di controllo
	
	#fatture da riscuotere
	da_riscuotere=Invoice.objects.filter(status='non pagato').exclude(Nota_di_credito='1')
	print(da_riscuotere)
	soldi_da_ricevere=sum(da_riscuotere.values_list('totale_fattura', flat=True)) #per la somma di tutti icampi
	soldi_da_ricevere='{:0.2f}'.format(soldi_da_ricevere)#per renderelo soltanto a due decimali
	fatture_da_riscuotere=da_riscuotere.count()
	
	#fatture totale incassato
	soldi_riscossi=Invoice.objects.filter(Q(status='pagato') | Q(status='pagato contanti'))#con il Q serve per fare le comparazioni
	total_price = sum(soldi_riscossi.values_list('totale_fattura', flat=True)) #per la somma di tutti icampi
	total_price='{:0.2f}'.format(total_price)#per renderelo soltanto a due decimali
	
	#soldi da fatture scadute
	fatture_scadute=Invoice.objects.filter(status='scadute')
	soldi_fatture_scadute=sum(fatture_scadute.values_list('totale_fattura', flat=True)) #per la somma di tutti icampi
	soldi_fatture_scadute='{:0.2f}'.format(soldi_fatture_scadute)#per renderelo soltanto a due decimali




	ultimo=Invoice.objects.last()
	ultimoid=ultimo.invoice_id
	context={'lista':lista, 'ultimoid':ultimoid,
	'incassato':total_price, 'da_riscuotere':fatture_da_riscuotere,
	'fatture_scadute':fatture_scadute,'tot_fatture_scadute':soldi_fatture_scadute, 'soldi_da_ricevere':soldi_da_ricevere}
	return render(request, 'lista_fatture.html', context) 


 
