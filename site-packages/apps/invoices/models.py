from __future__ import unicode_literals
import os
import datetime
from django.db import models
from django.db import connections
from django.core.files.storage import FileSystemStorage



# Create your models here.

class Nota_di_credito(models.Model):
	invoice = models.ForeignKey('Invoice',unique=True, on_delete=models.CASCADE)#si pu√≤ usare anche il campo OnetoOne ma ritorna solo un oggetto e non l'intero queryset come il foreign key
	date = models.DateField(blank=True, null=True)
	note=models.TextField(blank=True, null=True)
	eventuali_motivi = models.TextField( blank=True, null=True)
	status = models.CharField(max_length=20, default='Nota di credito')
	nota_id=models.CharField(max_length=250,unique=True)
	def __str__(self):
	    return str(self.invoice_id)

class prodotti(models.Model):
	invoice = models.ForeignKey('Invoice', on_delete=models.CASCADE)
	prodotto = models.TextField( blank=True, null=True)
	descrizione = models.TextField( blank=True, null=True)
	quantita = models.FloatField( blank=True, null=True)
	prezzo = models.FloatField( blank=True, null=True)
	sconto = models.FloatField( blank=True, null=True)
	prezzo_sub_tot = models.FloatField( blank=True, null=True)
	tax = models.FloatField( blank=True, null=True)
	tipo_di_sconto = models.TextField( blank=True, null=True)
	totale = models.FloatField(max_length=256, blank=True, null=True)
	
class prodottipreventivo(models.Model):
	invoice = models.ForeignKey('Preventivo', on_delete=models.CASCADE)
	prodotto = models.TextField( blank=True, null=True)
	descrizione = models.TextField( blank=True, null=True)
	quantita = models.FloatField( blank=True, null=True)
	prezzo = models.FloatField( blank=True, null=True)
	sconto = models.FloatField( blank=True, null=True)
	prezzo_sub_tot = models.FloatField( blank=True, null=True)
	tax = models.FloatField( blank=True, null=True)
	tipo_di_sconto = models.TextField( blank=True, null=True)
	totale = models.FloatField(max_length=256, blank=True, null=True)




class Invoice(models.Model):
	invoice_id=models.CharField(max_length=200, blank=True, null=True,unique=True)
	giorni_pagamento_fattura=models.DateField(blank=True, null=True)
	datapagamentofattura=models.CharField(max_length=20,blank=True, null=True)
	customer = models.ForeignKey('customer.Customer', on_delete=models.CASCADE)
	date= models.DateField(blank=True, null=True)
	data_pagamento_fattura_effettivo=models.DateField(blank=True, null=True)
	scadenza_fattura = models.CharField(max_length=10, blank=True, null=True)
	status = models.CharField(max_length=10,blank=True, null=True)
	Nota_di_credito = models.CharField(max_length=10,blank=True, null=True)
	descrizione_altri_oneri = models.TextField( blank=True, null=True)
	altri_oneri = models.FloatField( blank=True, null=True)
	spese_spedizione = models.FloatField( blank=True, null=True)
	totale_fattura_tasse_escluse =models.FloatField( blank=True, null=True)
	totale_iva_fattura = models.FloatField( blank=True, null=True)
	totale_sconto_applicato_fattura = models.FloatField( blank=True, null=True)
	totale_fattura =models.FloatField( blank=True, null=True)
	metodo_pagamento = models.CharField(max_length=10,blank=True, null=True)
	note = models.TextField( blank=True, null=True)
	def __str__(self):
	    return str(self.invoice_id)

class Preventivo(models.Model):
	preventivo_id=models.CharField(max_length=200, blank=True, null=True,unique=True)
	customer = models.ForeignKey('customer.Customer', on_delete=models.CASCADE)
	date= models.DateField(blank=True, null=True)
	scadenza_preventivo = models.CharField(max_length=10, blank=True, null=True)
	status = models.CharField(max_length=10,blank=True, null=True)
	descrizione_altri_oneri = models.TextField( blank=True, null=True)
	note = models.TextField( blank=True, null=True)
	altri_oneri = models.FloatField( blank=True, null=True)
	spese_spedizione = models.FloatField( blank=True, null=True)
	totale_fattura_tasse_escluse =models.FloatField( blank=True, null=True)
	totale_iva_fattura = models.FloatField( blank=True, null=True)
	totale_sconto_applicato_fattura = models.FloatField( blank=True, null=True)
	totale_fattura =models.FloatField( blank=True, null=True)
	metodo_pagamento = models.CharField(max_length=10,blank=True, null=True)
	def __str__(self):
	    return str(self.invoice_id)

